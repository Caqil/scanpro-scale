{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for MegaPDF document processing service",
        "title": "MegaPDF API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "token": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "isEmailVerified": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Creates a new user account with email verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "emailSent": {
                                    "type": "boolean"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "token": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "freeOperationsUsed": {
                                            "type": "integer"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "isEmailVerified": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/compress": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reduces PDF file size using maximum compression",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Compress a PDF file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to compress (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "compressedSize": {
                                    "type": "integer"
                                },
                                "compressionRatio": {
                                    "type": "string"
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "originalName": {
                                    "type": "string"
                                },
                                "originalSize": {
                                    "type": "integer"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/merge": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Combines multiple PDF files into a single PDF",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Merge multiple PDF files",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF files to merge (multiple files)",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JSON array specifying the order of files (e.g., [2,0,1])",
                        "name": "order",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileCount": {
                                    "type": "integer"
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                },
                                "mergedSize": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "totalInputSize": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/pagenumber": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds customizable page numbers to a PDF file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Add page numbers to a PDF file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to add page numbers to (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "bottom-center",
                        "description": "Position of page numbers: top-left, top-center, top-right, bottom-left, bottom-center, bottom-right",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "numeric",
                        "description": "Format of page numbers: numeric, roman, alphabetic",
                        "name": "format",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "Helvetica",
                        "description": "Font family: Helvetica, Times, Courier",
                        "name": "fontFamily",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "default": 12,
                        "description": "Font size in points",
                        "name": "fontSize",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "#000000",
                        "description": "Text color in hex format",
                        "name": "color",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "First page number",
                        "name": "startNumber",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Text to add before page number",
                        "name": "prefix",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Text to add after page number",
                        "name": "suffix",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "default": 40,
                        "description": "Horizontal margin in points",
                        "name": "marginX",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Vertical margin in points",
                        "name": "marginY",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Pages to add numbers to (e.g., '1-3,5,7-9'), empty for all pages",
                        "name": "selectedPages",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Skip numbering on the first page",
                        "name": "skipFirstPage",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileName": {
                                    "type": "string"
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "numberedPages": {
                                    "type": "integer"
                                },
                                "originalName": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "totalPages": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/protect": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds password protection and permission restrictions to a PDF file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Password protect a PDF file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to protect (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password to set for the PDF (minimum 4 characters)",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "restricted",
                            "all"
                        ],
                        "type": "string",
                        "default": "restricted",
                        "description": "Permission level: restricted (apply specific permissions) or all (grant all permissions)",
                        "name": "permission",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Allow document printing",
                        "name": "allowPrinting",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Allow content copying",
                        "name": "allowCopying",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Allow content editing",
                        "name": "allowEditing",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "methodUsed": {
                                    "type": "string"
                                },
                                "originalName": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/rotate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Rotates pages in a PDF file by a specified angle",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Rotate pages in a PDF file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to rotate (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            90,
                            180,
                            270
                        ],
                        "type": "integer",
                        "description": "Rotation angle in degrees",
                        "name": "angle",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "all",
                        "description": "Pages to rotate (e.g., '1-3,5,7-9'), empty for all pages",
                        "name": "pages",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "originalName": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/split": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Splits a PDF file into multiple PDFs based on page ranges",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Split a PDF file into multiple PDFs",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to split (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ranges for splitting (e.g., '1-3,4,5-7')",
                        "name": "ranges",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileCount": {
                                    "type": "integer"
                                },
                                "files": {
                                    "type": "array"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/unlock": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes password protection from a PDF file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Remove password protection from a PDF file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to unlock (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Current PDF password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "originalName": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pdf/watermark": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds text or image watermark to a PDF file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pdf"
                ],
                "summary": "Add watermark to a PDF file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to watermark (max 50MB)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text for watermark",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image for watermark (only used if text is not provided)",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "default": 0.5,
                        "description": "Watermark opacity (0.1-1.0)",
                        "name": "opacity",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "center",
                            "diagonal",
                            "topleft",
                            "topright",
                            "bottomleft",
                            "bottomright"
                        ],
                        "type": "string",
                        "default": "center",
                        "description": "Watermark position",
                        "name": "position",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "billing": {
                                    "type": "object",
                                    "properties": {
                                        "currentBalance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        },
                                        "usedFreeOperation": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fileUrl": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "originalName": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "number"
                                        },
                                        "freeOperationsRemaining": {
                                            "type": "integer"
                                        },
                                        "operationCost": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns user's balance, free operations, and transaction history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get user balance information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number"
                                },
                                "freeOperationsRemaining": {
                                    "type": "integer"
                                },
                                "freeOperationsTotal": {
                                    "type": "integer"
                                },
                                "freeOperationsUsed": {
                                    "type": "integer"
                                },
                                "nextResetDate": {
                                    "type": "string"
                                },
                                "operationCounts": {
                                    "type": "object"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "totalOperations": {
                                    "type": "integer"
                                },
                                "transactions": {
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/deposit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiates a payment process to add funds to user's balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Create a balance deposit",
                "parameters": [
                    {
                        "description": "Deposit amount (minimum $5.00)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "checkoutUrl": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "orderId": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/deposit/verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Completes the deposit process after payment confirmation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Verify a deposit transaction",
                "parameters": [
                    {
                        "description": "PayPal order ID to verify",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "newBalance": {
                                    "type": "number"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/validate-key": {
            "get": {
                "description": "Validates an API key and checks permissions for operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Validate API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation to validate permission for (e.g., compress, merge, protect)",
                        "name": "operation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "API key to validate (if not provided in header)",
                        "name": "api_key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "API key to validate (if not provided in query)",
                        "name": "x-api-key",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "freeOperationsRemaining": {
                                    "type": "integer"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "valid": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        },
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}