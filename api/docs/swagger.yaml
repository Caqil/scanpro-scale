basePath: /api
host: localhost:8080
info:
  contact: {}
  description: API for MegaPDF document processing service
  title: MegaPDF API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: body
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              success:
                type: boolean
              token:
                type: string
              user:
                properties:
                  email:
                    type: string
                  id:
                    type: string
                  isEmailVerified:
                    type: boolean
                  name:
                    type: string
                  role:
                    type: string
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Login a user
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with email verification
      parameters:
      - description: User registration information
        in: body
        name: body
        required: true
        schema:
          properties:
            email:
              type: string
            name:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              emailSent:
                type: boolean
              success:
                type: boolean
              token:
                type: string
              user:
                properties:
                  balance:
                    type: number
                  email:
                    type: string
                  freeOperationsUsed:
                    type: integer
                  id:
                    type: string
                  isEmailVerified:
                    type: boolean
                  name:
                    type: string
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "409":
          description: Conflict
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /api/pdf/compress:
    post:
      consumes:
      - multipart/form-data
      description: Reduces PDF file size using maximum compression
      parameters:
      - description: PDF file to compress (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              compressedSize:
                type: integer
              compressionRatio:
                type: string
              fileUrl:
                type: string
              filename:
                type: string
              message:
                type: string
              originalName:
                type: string
              originalSize:
                type: integer
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Compress a PDF file
      tags:
      - pdf
  /api/pdf/merge:
    post:
      consumes:
      - multipart/form-data
      description: Combines multiple PDF files into a single PDF
      parameters:
      - description: PDF files to merge (multiple files)
        in: formData
        name: files
        required: true
        type: file
      - description: JSON array specifying the order of files (e.g., [2,0,1])
        in: formData
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileCount:
                type: integer
              fileUrl:
                type: string
              filename:
                type: string
              mergedSize:
                type: integer
              message:
                type: string
              success:
                type: boolean
              totalInputSize:
                type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Merge multiple PDF files
      tags:
      - pdf
  /api/pdf/pagenumber:
    post:
      consumes:
      - multipart/form-data
      description: Adds customizable page numbers to a PDF file
      parameters:
      - description: PDF file to add page numbers to (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      - default: bottom-center
        description: 'Position of page numbers: top-left, top-center, top-right, bottom-left,
          bottom-center, bottom-right'
        in: formData
        name: position
        type: string
      - default: numeric
        description: 'Format of page numbers: numeric, roman, alphabetic'
        in: formData
        name: format
        type: string
      - default: Helvetica
        description: 'Font family: Helvetica, Times, Courier'
        in: formData
        name: fontFamily
        type: string
      - default: 12
        description: Font size in points
        in: formData
        name: fontSize
        type: integer
      - default: '#000000'
        description: Text color in hex format
        in: formData
        name: color
        type: string
      - default: 1
        description: First page number
        in: formData
        name: startNumber
        type: integer
      - default: ""
        description: Text to add before page number
        in: formData
        name: prefix
        type: string
      - default: ""
        description: Text to add after page number
        in: formData
        name: suffix
        type: string
      - default: 40
        description: Horizontal margin in points
        in: formData
        name: marginX
        type: integer
      - default: 30
        description: Vertical margin in points
        in: formData
        name: marginY
        type: integer
      - description: Pages to add numbers to (e.g., '1-3,5,7-9'), empty for all pages
        in: formData
        name: selectedPages
        type: string
      - default: false
        description: Skip numbering on the first page
        in: formData
        name: skipFirstPage
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileName:
                type: string
              fileUrl:
                type: string
              message:
                type: string
              numberedPages:
                type: integer
              originalName:
                type: string
              success:
                type: boolean
              totalPages:
                type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add page numbers to a PDF file
      tags:
      - pdf
  /api/pdf/protect:
    post:
      consumes:
      - multipart/form-data
      description: Adds password protection and permission restrictions to a PDF file
      parameters:
      - description: PDF file to protect (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      - description: Password to set for the PDF (minimum 4 characters)
        in: formData
        name: password
        required: true
        type: string
      - default: restricted
        description: 'Permission level: restricted (apply specific permissions) or
          all (grant all permissions)'
        enum:
        - restricted
        - all
        in: formData
        name: permission
        type: string
      - default: false
        description: Allow document printing
        in: formData
        name: allowPrinting
        type: boolean
      - default: false
        description: Allow content copying
        in: formData
        name: allowCopying
        type: boolean
      - default: false
        description: Allow content editing
        in: formData
        name: allowEditing
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileUrl:
                type: string
              filename:
                type: string
              message:
                type: string
              methodUsed:
                type: string
              originalName:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Password protect a PDF file
      tags:
      - pdf
  /api/pdf/rotate:
    post:
      consumes:
      - multipart/form-data
      description: Rotates pages in a PDF file by a specified angle
      parameters:
      - description: PDF file to rotate (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      - description: Rotation angle in degrees
        enum:
        - 90
        - 180
        - 270
        in: formData
        name: angle
        required: true
        type: integer
      - default: all
        description: Pages to rotate (e.g., '1-3,5,7-9'), empty for all pages
        in: formData
        name: pages
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileUrl:
                type: string
              filename:
                type: string
              message:
                type: string
              originalName:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Rotate pages in a PDF file
      tags:
      - pdf
  /api/pdf/split:
    post:
      consumes:
      - multipart/form-data
      description: Splits a PDF file into multiple PDFs based on page ranges
      parameters:
      - description: PDF file to split (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      - description: Page ranges for splitting (e.g., '1-3,4,5-7')
        in: formData
        name: ranges
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileCount:
                type: integer
              files:
                type: array
              message:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Split a PDF file into multiple PDFs
      tags:
      - pdf
  /api/pdf/unlock:
    post:
      consumes:
      - multipart/form-data
      description: Removes password protection from a PDF file
      parameters:
      - description: PDF file to unlock (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      - description: Current PDF password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileUrl:
                type: string
              filename:
                type: string
              message:
                type: string
              originalName:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove password protection from a PDF file
      tags:
      - pdf
  /api/pdf/watermark:
    post:
      consumes:
      - multipart/form-data
      description: Adds text or image watermark to a PDF file
      parameters:
      - description: PDF file to watermark (max 50MB)
        in: formData
        name: file
        required: true
        type: file
      - description: Text for watermark
        in: formData
        name: text
        type: string
      - description: Image for watermark (only used if text is not provided)
        in: formData
        name: image
        type: file
      - default: 0.5
        description: Watermark opacity (0.1-1.0)
        in: formData
        name: opacity
        type: number
      - default: center
        description: Watermark position
        enum:
        - center
        - diagonal
        - topleft
        - topright
        - bottomleft
        - bottomright
        in: formData
        name: position
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              billing:
                properties:
                  currentBalance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                  usedFreeOperation:
                    type: boolean
                type: object
              fileUrl:
                type: string
              filename:
                type: string
              message:
                type: string
              originalName:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "402":
          description: Payment Required
          schema:
            properties:
              details:
                properties:
                  balance:
                    type: number
                  freeOperationsRemaining:
                    type: integer
                  operationCost:
                    type: number
                type: object
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add watermark to a PDF file
      tags:
      - pdf
  /api/user/balance:
    get:
      consumes:
      - application/json
      description: Returns user's balance, free operations, and transaction history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              balance:
                type: number
              freeOperationsRemaining:
                type: integer
              freeOperationsTotal:
                type: integer
              freeOperationsUsed:
                type: integer
              nextResetDate:
                type: string
              operationCounts:
                type: object
              success:
                type: boolean
              totalOperations:
                type: integer
              transactions:
                type: array
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user balance information
      tags:
      - balance
  /api/user/deposit:
    post:
      consumes:
      - application/json
      description: Initiates a payment process to add funds to user's balance
      parameters:
      - description: Deposit amount (minimum $5.00)
        in: body
        name: body
        required: true
        schema:
          properties:
            amount:
              type: number
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              checkoutUrl:
                type: string
              message:
                type: string
              orderId:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a balance deposit
      tags:
      - balance
  /api/user/deposit/verify:
    post:
      consumes:
      - application/json
      description: Completes the deposit process after payment confirmation
      parameters:
      - description: PayPal order ID to verify
        in: body
        name: body
        required: true
        schema:
          properties:
            orderId:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              amount:
                type: number
              message:
                type: string
              newBalance:
                type: number
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Verify a deposit transaction
      tags:
      - balance
  /api/validate-key:
    get:
      consumes:
      - application/json
      description: Validates an API key and checks permissions for operations
      parameters:
      - description: Operation to validate permission for (e.g., compress, merge,
          protect)
        in: query
        name: operation
        type: string
      - description: API key to validate (if not provided in header)
        in: query
        name: api_key
        type: string
      - description: API key to validate (if not provided in query)
        in: header
        name: x-api-key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              balance:
                type: number
              error:
                type: string
              freeOperationsRemaining:
                type: integer
              userId:
                type: string
              valid:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Validate API key
      tags:
      - keys
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-api-key
    type: apiKey
  BearerAuth:
    description: Type "Bearer" followed by a space and the JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
